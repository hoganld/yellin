#+TITLE: Yellin TODO

* Scope
The scope of Yellin is Authentication. This means that other things are out of scope.
** In Scope
*** Authentication methods
Email + Password
MFA (TOTP etc)
Webauthn
Passkeys
*** Other features
Remember Me
Password Reset
Manual Session management (Log out other sessions)
Check for pwned passwords
Sudo
*** Social/OAuth?
Not really a fan.
*** API auth?
If I implement an API, then yes
** Out of Scope
Rate limiting
User tracking
Registrations
Invitations
Multiple Tenants
* Dependencies
Rails 7.1+
bcrypt
* Tests
** Yellin Tests
Directly implement tests for code that will live in the Engine itself
*** Controllers
- [ ] Sign in
- [ ] Sign out
- [ ] Password reset
- [ ] Sessions management
- [ ] Change Password
- [ ] Change Email
- [ ] Verify Email
- [ ] Update Security Devices (TOTP, Webauthn, Passkeys)
- [ ] Generate backup codes
*** Models
- [ ] Session model
- [ ] Test User that includes the concerns
*** Mailers
- [ ] Test that the emails are sent out
- [ ] Avoid testing the content, because that will be user configurable
*** Integration
End-to-end workflow tests for:
- [ ] Sign in/Sign out
- [ ] Sign in with MFA
- [ ] Sign in with TOTP
- [ ] Sign in with Webauthn
- [ ] Password Reset
- [ ] Change + Verify Email
- [ ] Change MFA Devices
** TODO Test Generators
Write generators that will type the boilerplate tests for:
- [ ] User model
- [ ] Access-controlled controllers (generic)
* Migration Path
- [X] Remove registration
- [X] Remove account activation
- [X] Remove dependency on rails-controller-test gem (assigns)
- [X] Use authenticate_by
- [X] Nomenclature update: use sign_in instead of login, sign_out instead of logout
- [ ] Use generates_token_for instead of custom digest generation
- [ ] Use DB-backed Sessions instead of :remember_me
- [ ] Split acts_as_user into multiple model concerns
- [ ] New concerns for methods needed to go in ApplicationController
- [ ] MFA logic from Authentication-Zero
